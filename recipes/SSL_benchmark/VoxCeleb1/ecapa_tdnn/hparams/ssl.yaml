# ################################
# ################################

# Basic parameters
seed: 1986
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref /gpfsscratch/rech/nou/uzn19yk/downstream2/voxceleb/distillhubert_ds1
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt
weights_path: !ref <save_folder>/weights.ckpt
# Data files
data_folder: /gpfsscratch/rech/nou/uzn19yk/voxceleb/  # e.g. /path/to/Voxceleb
csv_folder: /gpfsstore/rech/nou/uzn19yk/results/voxceleb/hubert_weighted/save/
train_annotation: !ref <csv_folder>/train.csv
valid_annotation: !ref <csv_folder>/dev.csv
num_layers_ssl: 3
# Folder to extract data augmentation files
rir_folder: !ref <data_folder> # Change it if needed

# Use the following links for the official voxceleb splits:
# VoxCeleb1 (cleaned): https://www.robots.ox.ac.uk/~vgg/data/voxceleb/meta/veri_test2.txt
# VoxCeleb1-H (cleaned): https://www.robots.ox.ac.uk/~vgg/data/voxceleb/meta/list_test_hard2.txt
# VoxCeleb1-E (cleaned): https://www.robots.ox.ac.uk/~vgg/data/voxceleb/meta/list_test_all2.txt.
# VoxCeleb1-E and VoxCeleb1-H lists are drawn from the VoxCeleb1 training set.
# Therefore you cannot use any files in VoxCeleb1 for training if you are using these lists for testing.
verification_file: /gpfsscratch/rech/nou/uzn19yk/voxceleb/veri_test2.txt


skip_prep: False
ckpt_interval_minutes: 15 # save checkpoint every N min
pretrain: True
# Training parameters
number_of_epochs: 1
batch_size: 8
lr: 0.001
lr_final: 0.0001
mask_length: 10
mask_prob: 0.65
lr_weights: 0.01
sample_rate: 16000
shuffle: True
random_chunk: True

sentence_len: 3 

# Feature parameters

encoder_dim: 768

# Number of speakers
out_n_neurons: 1211  #1211 for vox1  # 5994 for vox2, 7205 for vox1+vox2

freeze_wav2vec: True
dataloader_options:
    batch_size: !ref <batch_size>
    shuffle: !ref <shuffle>

embedding_model: !new:speechbrain.lobes.models.ECAPA_TDNN.ECAPA_TDNN
    input_size: !ref <encoder_dim>
    channels: [512, 512, 512, 512, 1536]
    kernel_sizes: [5, 3, 3, 3, 1]
    dilations: [1, 2, 3, 4, 1]
    groups: [1, 1, 1, 1, 1]
    attention_channels: 64
    lin_neurons: 512

classifier: !new:speechbrain.lobes.models.ECAPA_TDNN.Classifier
    input_size: 512
    out_neurons: !ref <out_n_neurons>

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

ssl_hub: /gpfsstore/rech/nou/uzn19yk/distilhubert/

weighted_ssl_model: !new:speechbrain.lobes.models.SSLModel.WeightedSSLModel
   hub: !ref <ssl_hub>
   num_layers: !ref <num_layers_ssl>


modules:
    weighted_ssl_model: !ref <weighted_ssl_model>
    embedding_model: !ref <embedding_model>
    classifier: !ref <classifier>

model: !new:torch.nn.ModuleList
   - [!ref <embedding_model>, !ref <classifier>]


# Cost + optimization
compute_error: !name:speechbrain.nnet.losses.classification_error

compute_cost: !new:speechbrain.nnet.losses.LogSoftmaxWrapper
    loss_fn: !new:speechbrain.nnet.losses.AdditiveAngularMargin
        margin: 0.2
        scale: 30


model_opt_class: !name:torch.optim.Adam
    lr: !ref <lr>
    weight_decay: 0.000002

lr_annealing: !new:speechbrain.nnet.schedulers.LinearScheduler
    initial_value: !ref <lr>
    final_value: !ref <lr_final>
    epoch_count: !ref <number_of_epochs>

weights_opt_class: !name:torch.optim.Adam
   lr: !ref <lr_weights>

lr_annealing_weights: !new:speechbrain.nnet.schedulers.NewBobScheduler
   initial_value: !ref <lr_weights>
   improvement_threshold: 0.0025
   annealing_factor: 0.9
   patient: 0



# Used to load the SB checkpoint of w2v2
pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
   collect_in: !ref <save_folder>


# Logging + checkpoints
train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

error_stats: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:speechbrain.nnet.losses.classification_error
        reduction: batch

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        embedding_model: !ref <embedding_model>
        scheduler_wav2vec: !ref <lr_annealing_weights>
        ssl_model: !ref <weighted_ssl_model>
        classifier: !ref <classifier>
        counter: !ref <epoch_counter>

train_data: !ref <save_folder>/train.csv
enrol_data: !ref <save_folder>/enrol.csv
test_data: !ref <save_folder>/test.csv

verif_batch_size: 2
n_train_snts: 300000 # used for normalization stats


# Dataloader options
train_dataloader_opts:
    batch_size: !ref <batch_size>

enrol_dataloader_opts:
    batch_size: !ref <batch_size>

test_dataloader_opts:
    batch_size: !ref <batch_size>


mean_var_norm_emb: !new:speechbrain.processing.features.InputNormalization
    norm_type: global
    std_norm: False


