# ################################
# Model: encoder 2 + Contexnet
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1986
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref /home/infres/ext-6343/venv_superb/The-audio-benchmark/speechbrain-develop/downstream/LibriSpeechASR/contextnet/results/hubert_large/<seed>
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Path for the SSL model ( not necessrily W2V2 ) 
hub: facebook/hubert-large-ll60k
#Path where the layer weights are stored 
weights_path: !ref <save_folder>/weights.ckpt


# Data files
data_folder: /home/infres/ext-6343/venv_superb/The-audio-benchmark/speechbrain-develop/downstream/LibriSpeechASR/data/LibriSpeech # e,g./path/to/LibriSpeech
# noise/ris dataset will automatically be downloaded
# data_folder_rirs: !ref <data_folder>
train_splits: ["train-clean-100"]
dev_splits: ["dev-clean"]
test_splits: ["test-clean", "test-other"]
skip_prep: False
ckpt_interval_minutes: 25 # save checkpoint every N min
csv_folder: /home/infres/ext-6343/venv_superb/The-audio-benchmark/speechbrain-develop/downstream/LibriSpeechASR/data_csv
train_csv: !ref <csv_folder>/train-clean-100.csv
valid_csv: !ref <csv_folder>/dev-clean.csv
test_csv:
   - !ref <csv_folder>/test-clean.csv
   - !ref <csv_folder>/test-other.csv

num_layers: 25 #Number of layers in the SSL model (should be 25 for large models and 13 for base or distilled)

# Training parameters
number_of_epochs: 30
lr: 0.0002
lr_weights: 0.01
sorting: ascending
auto_mix_prec: False
sample_rate: 16000


# With data_parallel batch_size is split into N jobs
# With DDP batch_size is multiplied by N jobs
# Must be 3 per GPU to fit 32GB of VRAM
batch_size: 4
test_batch_size: 4

# Dataloader options
train_dataloader_opts:
   batch_size: !ref <batch_size>

valid_dataloader_opts:
   batch_size: !ref <batch_size>

test_dataloader_opts:
   batch_size: !ref <test_batch_size>

# Model parameters
activation: !name:torch.nn.Sigmoid
dnn_layers: 1
dnn_neurons: 1024
freeze_encoder : True

# Outputs
output_neurons: 31  # BPE size, index(blank/eos/bos) = 0

# Decoding parameters

#
# Functions and classes
#
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
   limit: !ref <number_of_epochs>

augmentation: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
   sample_rate: !ref <sample_rate>
   speeds: [95, 100, 105]

stacker: !new:speechbrain.lobes.models.VanillaNN.VanillaNN
   input_shape: [null, null,null, 25]
   activation: !ref <activation>
   dnn_blocks: 1
   dnn_neurons: 1


enc: !new:speechbrain.lobes.models.ContextNet.ContextNet
   input_shape: [null, null, 1024]
   strides: [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1] #only unitary strides to keep the frame rate

#####
# Uncomment this block if you prefer to use a Fairseq pretrained model instead
# of a HuggingFace one. Here, we provide an URL that is obtained from the
# Fairseq github for the multilingual XLSR.
#
#encoder 2_url: https://dl.fbaipublicfiles.com/fairseq/encoder /encoder _vox_960h_pl.pt
#encoder 2: !new:speechbrain.lobes.models.fairseq_encoder .Fairseqencoder 2
#    pretrained_path: !ref <encoder 2_url>
#    output_norm: True
#    freeze: False
#    save_path: !ref <save_folder>/encoder 2_checkpoint/model.pt

ctc_lin: !new:speechbrain.nnet.linear.Linear
   input_size: 640
   n_neurons: !ref <output_neurons>

log_softmax: !new:speechbrain.nnet.activations.Softmax
   apply_log: True

ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
   blank_index: !ref <blank_index>

modules:
   stacker: !ref <stacker>
   enc: !ref <enc>
   ctc_lin: !ref <ctc_lin>

model: !new:torch.nn.ModuleList
   - [!ref <enc>, !ref <ctc_lin>, !ref <stacker>]

model_opt_class: !name:torch.optim.Adam
   lr: !ref <lr>

weights_opt_class: !name:torch.optim.Adam
   lr: !ref <lr_weights>

lr_annealing_model: !new:speechbrain.nnet.schedulers.NewBobScheduler
   initial_value: !ref <lr>
   improvement_threshold: 0.0025
   annealing_factor: 0.8
   patient: 0

lr_annealing_weights: !new:speechbrain.nnet.schedulers.NewBobScheduler
   initial_value: !ref <lr_weights>
   improvement_threshold: 0.0025
   annealing_factor: 0.9
   patient: 0

label_encoder: !new:speechbrain.dataio.encoder.CTCTextEncoder

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
   checkpoints_dir: !ref <save_folder>
   recoverables:
      model: !ref <model>
      scheduler_model: !ref <lr_annealing_model>
      scheduler_encoder : !ref <lr_annealing_weights>
      counter: !ref <epoch_counter>
      tokenizer: !ref <label_encoder>

blank_index: 0
bos_index: 1
eos_index: 2


train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
   save_file: !ref <train_log>

error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
   split_tokens: True
