# ############################################################################
 ############################################################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1986
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref /home/infres/ext-6343/venv_superb/The-audio-benchmark/speechbrain-develop/downstream/SLURP/direct/results/hubert_large/<seed>
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

num_layers: 25
weights_path: !ref <save_folder>/weights.ckpt
# Data files
# The SLURP dataset will be automatically downloaded in the specified data_folder
data_folder: /home/infres/ext-6343/venv_superb/The-audio-benchmark/speechbrain-develop/downstream/SLURP/direct/data # e.g, /localscratch/SLURP
# data_folder_rirs: !ref <data_folder>
train_splits: [ "train_real"]
csv_folder: /home/infres/ext-6343/venv_git_superb/The-audio-benchmark/speechbrain-develop/downstream/SLURP/direct/data_csvs
csv_train: !ref <csv_folder>/train-type=direct.csv
csv_valid: !ref <csv_folder>/devel-type=direct.csv
csv_test: !ref <csv_folder>/test-type=direct.csv
tokenizer_file: speechbrain/SLU-direct-SLURP-hubert-enc
skip_prep: False


compute_cost: !name:speechbrain.nnet.losses.nll_loss
# URL for the encoder2 model, you can change to benchmark diffrenet models
hub: facebook/hubert-large-ll60k

# Training parameters
number_of_epochs: 30
batch_size: 2
lr: 0.0003
lr_encoder2: 0.01
# token_type: unigram # ["unigram", "bpe", "char"]
sorting: random
ckpt_interval_minutes: 15 # save checkpoint every N min

#freeze all encoder2
freeze_encoder2: True

#set to true to freeze the CONV part of the encoder2 model
freeze_encoder2_conv: True

# Model parameters
sample_rate: 16000
emb_size: 128
dec_neurons: 512
output_neurons: 58 # index(eos/bos) = 0
encoder_dim: 768

dataloader_options:
    batch_size: !ref <batch_size>
    shuffle: True
    num_workers: 2  # 2 on linux but 0 works on windows
    drop_last: False


# Decoding parameters
bos_index: 0
eos_index: 0
min_decode_ratio: 0.0
max_decode_ratio: 10.0
slu_beam_size: 80
eos_threshold: 1.5
temperature: 1.25

avg_pool: !new:speechbrain.nnet.pooling.StatisticsPooling
    return_std: False

output_mlp: !new:speechbrain.nnet.linear.Linear
    input_size: 1024
    n_neurons: 18
    bias: False


dataloader_opts:
    batch_size: !ref <batch_size>
    shuffle: True

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

# Models

output_emb: !new:speechbrain.nnet.embedding.Embedding
    num_embeddings: !ref <output_neurons>
    embedding_dim: !ref <emb_size>


seq_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <dec_neurons>
    n_neurons: !ref <output_neurons>

augmentation: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    sample_rate: !ref <sample_rate>
    speeds: [95, 100, 105]

modules:
    output_emb: !ref <output_emb>
    seq_lin: !ref <seq_lin>
    output_mlp: !ref <output_mlp>

model: !new:torch.nn.ModuleList
    - [!ref <output_emb>, !ref <output_mlp>,
        !ref <seq_lin>]

tokenizer: !new:sentencepiece.SentencePieceProcessor

pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
    collect_in: !ref <save_folder>/SLURP_tokenizer
    loadables:
        tokenizer: !ref <tokenizer>
    paths:
        tokenizer: !ref <tokenizer_file>/tokenizer_58_unigram.model

error_stats: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:speechbrain.nnet.losses.classification_error
        reduction: batch

opt_class: !name:torch.optim.Adam
    lr: !ref <lr>

encoder2_opt_class: !name:torch.optim.Adam
    lr: !ref <lr_encoder2>

lr_annealing: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr>
    improvement_threshold: 0.0025
    annealing_factor: 0.8
    patient: 0

lr_annealing_encoder2: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr_encoder2>
    improvement_threshold: 0.0025
    annealing_factor: 0.9

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        scheduler: !ref <lr_annealing>
        lr_annealing_encoder2: !ref <lr_annealing_encoder2>
        counter: !ref <epoch_counter>

log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

seq_cost: !name:speechbrain.nnet.losses.nll_loss
    label_smoothing: 0.1

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
    split_tokens: True
