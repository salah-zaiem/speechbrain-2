# ################################
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1986
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: /gpfsscratch/rech/nou/uzn19yk/new_test_ssl_9h/commonvoice_ds1
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Path for the SSL model (not necessrily W2V2) 
hub: /gpfsstore/rech/nou/uzn19yk/distilhubert/
#Path where the layer weights are stored 
weights_path: !ref <save_folder>/weights.ckpt

# Data files
data_folder: !ref /gpfsscratch/rech/nou/uzn19yk/cv-corpus-11.0-2022-09-21/<language>  # e.g, /localscratch/cv-corpus-5.1-2020-06-22/fr
train_tsv_file: !ref <data_folder>/train.tsv  # Standard CommonVoice .tsv files
dev_tsv_file: !ref <data_folder>/dev.tsv  # Standard CommonVoice .tsv files
test_tsv_file: !ref <data_folder>/test.tsv  # Standard CommonVoice .tsv files
accented_letters: True
language: cy # use 'it' for Italian, 'rw' for Kinyarwanda, 'en' for english
train_csv: !ref <save_folder>/train.csv
valid_csv: !ref <save_folder>/dev.csv
test_csv: !ref <save_folder>/test.csv
skip_prep: False # Skip data preparation

avoid_if_longer_than: 10.0

num_layers_ssl: 3  #Number of layers in the SSL model (should be 25 for large models and 13 for base or distilled)
ssl_hub: /gpfsstore/rech/nou/uzn19yk/distilhubert/
encoder_dim: 768

# Training parameters
number_of_epochs: 2
lr: 0.0002
lr_weights: 0.01
sorting: ascending
auto_mix_prec: False
sample_rate: 16000
token_type: bpe  # ["unigram", "bpe", "char"]
character_coverage: 1.0


# With data_parallel batch_size is split into N jobs
# With DDP batch_size is multiplied by N jobs
# Must be 3 per GPU to fit 32GB of VRAM
batch_size: 4
test_batch_size: 4

# Dataloader options
train_dataloader_opts:
   batch_size: !ref <batch_size>
dataloader_options:
    batch_size: !ref <batch_size>
    num_workers: 4
test_dataloader_options:
    batch_size: !ref <test_batch_size>
    num_workers: 4


valid_dataloader_opts:
   batch_size: !ref <batch_size>

# Model parameters
activation: !name:torch.nn.Sigmoid
dnn_layers: 1
dnn_neurons: 768
freeze_encoder : True

# Outputs
output_neurons: 100  # BPE size, index(blank/eos/bos) = 0


# Functions and classes
#
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
   limit: !ref <number_of_epochs>

augmentation: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
   sample_rate: !ref <sample_rate>
   speeds: [95, 100, 105]

weighted_ssl_model: !new:speechbrain.lobes.models.huggingface_wav2vec.WeightedSSLModel
   hub: !ref <ssl_hub>
   num_layers: !ref <num_layers_ssl>

enc: !new:speechbrain.nnet.RNN.LSTM
   input_shape:  [Null, Null, !ref <encoder_dim>]
   num_layers: 2
   bidirectional : True
   dropout: 0.2
   hidden_size: 1024

ctc_lin: !new:speechbrain.nnet.linear.Linear
   input_size: 2048
   n_neurons: !ref <output_neurons>

log_softmax: !new:speechbrain.nnet.activations.Softmax
   apply_log: True

ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
   blank_index: !ref <blank_index>

modules:
   enc: !ref <enc>
   ctc_lin: !ref <ctc_lin>
   weighted_ssl_model: !ref <weighted_ssl_model>

model: !new:torch.nn.ModuleList
   - [!ref <enc>, !ref <ctc_lin>]

model_opt_class: !name:torch.optim.Adam
   lr: !ref <lr>

weights_opt_class: !name:torch.optim.Adam
   lr: !ref <lr_weights>

lr_annealing_model: !new:speechbrain.nnet.schedulers.NewBobScheduler
   initial_value: !ref <lr>
   improvement_threshold: 0.0025
   annealing_factor: 0.8
   patient: 0

lr_annealing_weights: !new:speechbrain.nnet.schedulers.NewBobScheduler
   initial_value: !ref <lr_weights>
   improvement_threshold: 0.0025
   annealing_factor: 0.9
   patient: 0

label_encoder: !new:speechbrain.dataio.encoder.CTCTextEncoder

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
   checkpoints_dir: !ref <save_folder>
   recoverables:
      model: !ref <model>
      ssl_model: !ref <weighted_ssl_model>
      scheduler_model: !ref <lr_annealing_model>
      scheduler_encoder : !ref <lr_annealing_weights>
      counter: !ref <epoch_counter>
      tokenizer: !ref <label_encoder>

blank_index: 0
unk_index: 1


train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
   save_file: !ref <train_log>

error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
   split_tokens: True
